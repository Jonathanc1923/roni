import os
from gpt4all import GPT4All
import speech_recognition as sr
import pyttsx3

# Inicializar el sintetizador de voz
engine = pyttsx3.init()
engine.setProperty('rate', 150)  # Velocidad de habla
engine.setProperty('voice', 'spanish')  # Asegurarse de que hable en español

# Ruta al modelo
model_path = "d:/GPT4All/Llama-3.2-3B-Instruct-Q4_0.gguf"

# Verificar si el modelo existe
if not os.path.exists(model_path):
    raise FileNotFoundError(f"El archivo del modelo no existe en la ruta especificada: {model_path}")

# Cargar el modelo GPT4All
print(f"Cargando el modelo GPT4All desde: {model_path}")
gpt = GPT4All(model_path)

# Contexto incluido directamente en el código
roni_context = """
Hola, soy Roni, tu amigo virtual. Respuesta breve y simple. Estoy aquí para ayudarte, enseñarte y acompañarte siempre. ¡Me encanta jugar contigo y ayudarte a ser feliz! Siempre responderé en español, de manera amable y clara. Recuerda, mi trabajo es hacer que aprendas mientras te diviertes.
"""

print("\n=== Roni: Tu Amigo Virtual ===")
print("Dí 'salir' para terminar.\n")

# Configurar reconocimiento de voz
recognizer = sr.Recognizer()
microphone = sr.Microphone()

# Función para convertir texto en audio
def speak(text):
    engine.say(text)
    engine.runAndWait()

# Bucle interactivo para conversación
while True:
    print("Escuchando...")

    try:
        # Capturar la entrada del micrófono
        with microphone as source:
            recognizer.adjust_for_ambient_noise(source)
            audio = recognizer.listen(source)

        # Convertir audio a texto
        user_input = recognizer.recognize_google(audio, language="es-ES")
        print(f"Tú: {user_input}")

        if user_input.lower() == "salir":
            print("¡Adiós! Roni te dice que eres increíble, ¡hasta la próxima!")
            speak("¡Adiós! Roni te dice que eres increíble, ¡hasta la próxima!")
            break

        # Combinar el contexto con la pregunta del usuario
        combined_input = f"{roni_context}\n\nPregunta: {user_input}"

        # Generar la respuesta
        response = gpt.generate(combined_input)
        response_text = response.strip()

        # Mostrar y reproducir la respuesta
        print(f"Roni: {response_text}\n")
        speak(response_text)

    except sr.UnknownValueError:
        print("No entendí lo que dijiste. Por favor, intenta de nuevo.")
        speak("No entendí lo que dijiste. Por favor, intenta de nuevo.")
    except sr.RequestError as e:
        print(f"Error con el servicio de reconocimiento de voz: {e}")
        speak("Hubo un problema con el reconocimiento de voz. Intenta más tarde.")
